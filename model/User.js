// Generated by CoffeeScript 1.10.0
(function() {
  var Schema, User, mongoose, userSchema;

  mongoose = require('mongoose');

  Schema = mongoose.Schema;

  userSchema = new Schema({
    userid: String,
    username: String,
    email: String,
    phoneNumber: String,
    password: {
      type: String,
      "default": 0
    },
    date: Date,
    imgHead: String,
    ticket: String,
    login: [
      {
        time: Date
      }
    ]
  });

  userSchema.statics = {
    login: function(phoneNumber, password, cb) {
      var thisUser;
      thisUser = this;
      return this.count().exec(function(err, count) {
        if (err) {
          return cb(err, null);
        } else {
          return thisUser.find({
            phoneNumber: phoneNumber,
            password: password
          }).exec(function(err, user) {
            if (err) {
              return cb(err, 0, null);
            } else {
              user.password = null;
              return cb(null, count, user);
            }
          });
        }
      });
    },
    userCheckedByPhone: function(phoneNumber, cb) {
      return this.find({
        phoneNumber: phoneNumber
      }).count().exec(function(err, count) {
        if (err) {
          return cb(err, null);
        } else {
          return cb(null, count);
        }
      });
    },
    userChecked: function(phoneNumber, password, cb) {
      return this.find({
        phonenumber: phoneNumber,
        password: password
      }).count().exec(function(err, count) {
        if (err) {
          return cb(err, null);
        } else {
          return cb(null, count);
        }
      });
    },
    userCount: function(cb) {
      return this.count().exec(function(err, count) {
        if (err) {
          return cb(err, null);
        } else {
          return cb(null, count);
        }
      });
    }
  };

  User = mongoose.model('User', userSchema);

  module.exports = User;

}).call(this);
